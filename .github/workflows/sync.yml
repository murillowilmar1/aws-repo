name: Deploy Glue Jobs (py + json)

on:
  workflow_dispatch:

jobs:
  deploy-glue-jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set AWS credentials (dev)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Assume role in prod
        id: assume
        run: |
          CREDS=$(aws sts assume-role \
            --role-arn "${{ secrets.ASSUME_ROLE_PROD_ARN }}" \
            --role-session-name glue-json-deploy)

          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Upload scripts to S3 (prod)
        run: |
          for pyfile in Notebooks/*.py; do
            filename=$(basename $pyfile)
            echo "Uploading $filename to S3..."
            aws s3 cp "$pyfile" "s3://aws-glue-assets-573509103457-us-east-1/scripts/$filename"
          done

      - name: Deploy Glue Jobs from JSON
        run: |
          for jsonfile in ETL/*.json; do
            job_name=$(basename "$jsonfile" .json)
            echo "Processing $job_name..."

            if aws glue get-job --job-name "$job_name" >/dev/null 2>&1; then
              echo "Updating job: $job_name"
              aws glue update-job --job-name "$job_name" --job-update file://$jsonfile
            else
              echo "Creating job: $job_name"
              aws glue create-job --name "$job_name" --cli-input-json file://$jsonfile
            fi
          done
